    int p=31;
    int mod=1e9+7;
    int pow(int a,int b)
    {
        if(b==0) return 1;
        if(b%2==0)
        {
            int temp=pow(a,b/2);
            return (1LL*temp*temp)%mod;
        }
        return (1LL*a*pow(a,b-1))%mod;
    }

    string s
    int n=s.size();
    vector<int>hash(n);
    vector<int>power_p(n);
    vector<int>inv(n+1);

    power_p[0]=1;
    for(int i=1;i<n;i++) power_p[i]=(1LL*power_p[i-1]*p)%mod;

    hash[0]=s[0]-'a'+1;
    for(int i=1;i<n;i++)
    {
        int val=s[i]-'a'+1;
        hash[i]=(hash[i-1]+(1LL*power_p[i]*val)%mod)%mod;
    }

    inv[n-1]=pow(power_p[n-1],mod-2);
    for(int i=n-2;i>=0;i--) inv[i]=(1LL*inv[i+1]*p)%mod;


    // hash value of s[i....j]

    int prev=0;
    if(i-1>=0) prev=hash[i-1];
    int current_hash=(1LL*(hash[j]-prev+mod)%mod*inv[i])%mod;
